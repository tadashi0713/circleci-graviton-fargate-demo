version: 2.1

orbs:
  node: circleci/node@5.1.0
  aws-ecr: circleci/aws-ecr@8.2.1
  aws-ecs: circleci/aws-ecs@2.3.0

jobs:
  e2e_test:
    docker:
      - image: mcr.microsoft.com/playwright:v1.34.3-focal
    steps:
      - checkout
      - node/install-packages
      - run: npm run e2e
      - store_test_results:
          path: results.xml

  e2e_test_parallel:
    parallelism: 10 # Parallelism
    docker:
      - image: mcr.microsoft.com/playwright:v1.34.3-focal
    steps:
      - checkout
      - node/install-packages
      - run: | 
          TEST_FILES=$(circleci tests glob "e2e/*.spec.ts" | circleci tests split --split-by=timings)
          npm run e2e -file=$TEST_FILES
      - store_test_results:
          path: results.xml

  deploy_fargate:
    machine:
      docker_layer_caching: true # Docker Layer Caching
      resource_class: arm.large # Resource Class(ARM VM)
      image: ubuntu-2004:current
    steps:
      - checkout
      - aws-ecr/build-and-push-image: # AWS ECR Orb
          assume-web-identity: true
          role-arn: arn:aws:iam::660990364978:role/tadashi_oidc_fargate
          platform: linux/arm64 # arm64 Docker image
          repo: tadashi-graviton-fargate-demo
          tag: '${CIRCLE_SHA1}-arm64'
      - aws-ecs/update-service:
          cluster-name: tadashi-fargate-graviton-demo-cluster
          container-image-name-updates: 'container=tadashi-fargate-graviton-demo-container,tag=${CIRCLE_SHA1}-arm64'
          family: tadashi-fargate-graviton-demo-task
          service-name: tadashi-fargate-graviton-demo-service
          verify-revision-is-deployed: true

workflows:
  test_and_deploy: 
    jobs:
      - node/test:
          name: unit_test
      - e2e_test:
          requires:
            - unit_test
      - e2e_test_parallel:
          requires:
            - unit_test
      - deploy_fargate:
          filters:
            branches:
              only:
                - main
          context:
            - aws-oidc-fargate
