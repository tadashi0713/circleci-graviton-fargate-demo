version: 2.1

orbs:
  node: circleci/node@5.1.0
  aws-cli: circleci/aws-cli@4.1.1
  aws-ecr: circleci/aws-ecr@9.0.4
  aws-ecs: circleci/aws-ecs@4.0.0

jobs:
  e2e_test:
    docker:
      - image: mcr.microsoft.com/playwright:v1.34.3-focal
    steps:
      - checkout
      - node/install-packages
      - run: | 
          TESTFILES=$(circleci tests glob "e2e/*.spec.ts")
          echo $TESTFILES | circleci tests run --command="xargs npx playwright test" --verbose
      - store_test_results:
          path: results.xml

  e2e_test_parallel:
    parallelism: 10 # Parallelism
    docker:
      - image: mcr.microsoft.com/playwright:v1.34.3-focal
    steps:
      - checkout
      - node/install-packages
      - run: | 
          TESTFILES=$(circleci tests glob "e2e/*.spec.ts")
          echo $TESTFILES | circleci tests run --command="xargs npx playwright test" --verbose --split-by=timings
      - store_test_results:
          path: results.xml

  deploy_fargate:
    machine:
      docker_layer_caching: true # Docker Layer Caching
      resource_class: arm.large # Resource Class(ARM VM)
      image: ubuntu-2004:current
    steps:
      - checkout
      - aws-ecr/build_and_push_image: # AWS ECR Orb
          auth:
            - aws-cli/setup:
                role_arn: arn:aws:iam::660990364978:role/tadashi_oidc_fargate
          platform: linux/arm64 # arm64 Docker image
          repo: tadashi-graviton-fargate-demo
          tag: '${CIRCLE_SHA1}-arm64'
      - aws-ecs/update_service:
          cluster: tadashi-fargate-graviton-demo-cluster
          container_image_name_updates: 'container=tadashi-fargate-graviton-demo-container,tag=${CIRCLE_SHA1}-arm64'
          family: tadashi-fargate-graviton-demo-task
          service_name: tadashi-fargate-graviton-demo-service
          verify_revision_is_deployed: true

workflows:
  test_and_deploy: 
    jobs:
      - node/test:
          name: unit_test
      - e2e_test:
          requires:
            - unit_test
      # - e2e_test_parallel:
      #     requires:
      #       - unit_test
      - deploy_fargate:
          requires:
            - e2e_test
          context:
            - aws-oidc-fargate
